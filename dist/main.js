/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/api.js":
/*!*******************!*\
  !*** ./js/api.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   askDataServ: () => (/* binding */ askDataServ),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   regUser: () => (/* binding */ regUser),\n/* harmony export */   sendDataServ: () => (/* binding */ sendDataServ)\n/* harmony export */ });\n/* harmony import */ var _variables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variables.js */ \"./js/variables.js\");\n/* harmony import */ var _datafunc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datafunc.js */ \"./js/datafunc.js\");\n/* harmony import */ var _push_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./push.js */ \"./js/push.js\");\n/* harmony import */ var _loginComponents_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./loginComponents.js */ \"./js/loginComponents.js\");\n\r\n//этот файл содержит подпрограммы отправки и приема данных с сервера\r\n\r\n; //импорт переменных\r\n                                                                   //импорт функции преобразования данных с json в массив\r\n                                                                            //импорт функции отправки комментария \r\n\r\n//инициализируем запрос на сервер\r\n\r\nfunction askDataServ() {\r\n    return fetch('https://wedev-api.sky.pro/api/v2/sergey-matveev/comments', {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: _loginComponents_js__WEBPACK_IMPORTED_MODULE_3__.token,\r\n        },\r\n    }).then((response) => {\r\n        (0,_datafunc_js__WEBPACK_IMPORTED_MODULE_1__.convertServToArr)(response, _variables_js__WEBPACK_IMPORTED_MODULE_0__.arrOfComments);          //после получения ответа от сервера преобразуем данные с json в массив\r\n    })\r\n        .catch((error) => {\r\n            alert('Кажется, у вас сломался интернет, попробуйте позже');\r\n        })\r\n};\r\n\r\n\r\n//инициализируем отправку данных на сервер\r\n\r\nfunction sendDataServ() {\r\n    \r\n    const userNameInput = document.getElementById('inputForName');          //поле ввода имени\r\n    const userCommentInput = document.getElementById('inputForComment');    //поле ввода коммента\r\n    const messageCommentAdd = document.querySelector('.text-while-add-comment');  //сообщение что коммент отправляется\r\n    const formForComment = document.querySelector('.add-form');                   //форма ввода комментария\r\n\r\n    return fetch('https://webdev-hw-api.vercel.app/api/v2/sergey-matveev/comments', {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: _loginComponents_js__WEBPACK_IMPORTED_MODULE_3__.token,\r\n        },\r\n        body: JSON.stringify({\r\n            text: userCommentInput.value\r\n                .replaceAll(\"&\", \"&amp;\")\r\n                .replaceAll(\"<\", \"&lt;\")\r\n                .replaceAll(\">\", \"&gt;\")\r\n                .replaceAll('\"', \"&quot;\"),\r\n            name: userNameInput.value\r\n                .replaceAll(\"&\", \"&amp;\")\r\n                .replaceAll(\"<\", \"&lt;\")\r\n                .replaceAll(\">\", \"&gt;\")\r\n                .replaceAll('\"', \"&quot;\"),\r\n            forceError: true,\r\n        })\r\n    }).then((response) => {\r\n        switch (response.status) {      //смотрим коды ответа сервера\r\n            case 201:                   //тут все гуд, данные отправлены, значит нам надо их получить обратно и срендерить (это внутри функции askDataServ)\r\n                return askDataServ();\r\n            case 400:                   //тут ошибка, принудительно прерываем промис\r\n                return Promise.reject(new Error('меньше 3 символов'));\r\n            case 500:                   //тут ошибка, принудительно прерываем промис\r\n                return Promise.reject(new Error('сервер сломался'));\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n        .then(() => {\r\n            formForComment.classList.remove('dpnone');    //после успешного получения комментариев, заменяем текстовую заглушку формой отправки комментария \r\n            messageCommentAdd.classList.add('dpnone');\r\n            userNameInput.value = \"\";                     //очищаем поля\r\n            userCommentInput.value = \"\";\r\n        })\r\n        .catch((error) => {                               //ловим и обрабатываем ошибки в цепочках промисов\r\n            formForComment.classList.remove('dpnone');    //в случае ошибок от сервера, заменяем текстовую заглушку формой отправки комментария \r\n            messageCommentAdd.classList.add('dpnone');\r\n            switch (error.message) {\r\n                case 'меньше 3 символов':\r\n                    alert('Имя и комментарий должны быть не короче 3 символов')\r\n                    break;\r\n                case 'сервер сломался':\r\n                    //alert('Сервер сломался, попробуй позже');\r\n                    console.log('Сервер сломался, попробуй позже');\r\n                    (0,_push_js__WEBPACK_IMPORTED_MODULE_2__.sendComment)();\r\n                    break;\r\n                default:\r\n                    alert('Кажется, у вас сломался интернет, попробуйте позже')\r\n                    break;\r\n            }\r\n        });\r\n}\r\n\r\nfunction loginUser(login, password) {\r\n    return fetch('https://wedev-api.sky.pro/api/user/login', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            login,\r\n            password,\r\n        }),\r\n    })\r\n        .then((response) => {\r\n            if (response.status === 400) {\r\n                throw new Error('Неверный логин или пароль');\r\n            }\r\n            return response.json();\r\n        });\r\n}\r\n\r\nfunction regUser(login, password, name) {\r\n    return fetch('https://wedev-api.sky.pro/api/user', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            login,\r\n            password,\r\n            name\r\n        }),\r\n    })\r\n        .then((response) => {\r\n            if (response.status === 400) {\r\n                throw new Error('Такой пользователь уже существует');\r\n            }\r\n            return response.json();\r\n        });\r\n}\r\n\r\n\n\n//# sourceURL=webpack://comments-feed/./js/api.js?");

/***/ }),

/***/ "./js/changeElement.js":
/*!*****************************!*\
  !*** ./js/changeElement.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   letClearForm: () => (/* binding */ letClearForm),\n/* harmony export */   letDisabledButton: () => (/* binding */ letDisabledButton)\n/* harmony export */ });\n\r\n//этот файл содержит подпрограммы для изменения внешнего вида элементов\r\n\r\n//Расширенная валидация\r\n\r\nfunction letDisabledButton(expectedValue) {\r\n    const commentButton = document.getElementById('buttonForWriteComment');   //кнопка для отправки коммента\r\n    if (expectedValue === '') {\r\n        commentButton.disabled = true;\r\n        commentButton.classList.add('add-form-button_disable')\r\n    } else {\r\n        commentButton.disabled = false;\r\n        commentButton.classList.remove('add-form-button_disable')\r\n    }\r\n};\r\n\r\n//Очистка формы\r\n\r\nfunction letClearForm(form) {\r\n    form.classList.remove('error');\r\n};\r\n\r\n\n\n//# sourceURL=webpack://comments-feed/./js/changeElement.js?");

/***/ }),

/***/ "./js/datafunc.js":
/*!************************!*\
  !*** ./js/datafunc.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertServToArr: () => (/* binding */ convertServToArr)\n/* harmony export */ });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render.js */ \"./js/render.js\");\n/* harmony import */ var _loginComponents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loginComponents.js */ \"./js/loginComponents.js\");\n\r\n//этот файл содержит подпрограмму преобразования данных с json в массив \r\n\r\n;       //импорт рендре функции\r\n\r\n\r\n//Функция преобразования данных с сервера в массив комментариев\r\n\r\nconst convertServToArr = (response, array) => {\r\n    return response.json().then((responseData) => {\r\n        array = responseData.comments;\r\n        array = array.map((item) => {\r\n            return {\r\n                name: item.author.name,\r\n                date: new Date(item.date),\r\n                text: item.text,\r\n                likes: item.likes,\r\n                isActiveLike: item.isLiked,\r\n                id: item.id,\r\n            }\r\n        });\r\n        if (!_loginComponents_js__WEBPACK_IMPORTED_MODULE_1__.token) {\r\n            (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderComments)(array);      //Если мы без авторизации, то уже в существующую разметку добавляем ленту комментариев\r\n        } else (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)(array);\r\n        \r\n    })\r\n}\r\n\r\n\n\n//# sourceURL=webpack://comments-feed/./js/datafunc.js?");

/***/ }),

/***/ "./js/loginComponents.js":
/*!*******************************!*\
  !*** ./js/loginComponents.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   currentUser: () => (/* binding */ currentUser),\n/* harmony export */   getDataFromLocalStorage: () => (/* binding */ getDataFromLocalStorage),\n/* harmony export */   renderLoginComponents: () => (/* binding */ renderLoginComponents),\n/* harmony export */   token: () => (/* binding */ token)\n/* harmony export */ });\n/* harmony import */ var _push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./push.js */ \"./js/push.js\");\n\r\n\r\nlet token = null;\r\nlet currentUser = null;\r\n\r\nfunction getDataFromLocalStorage() {\r\n    token = localStorage.getItem('token');\r\n    currentUser = localStorage.getItem('user');\r\n}\r\nfunction renderLoginComponents(appElement, askDataServ) {\r\n    let isLoginMode = true;\r\n\r\n    const appHtml = `\r\n            <ul class=\"comments\" id=\"blockOfComments\">\r\n            <p>Пожалуйста подождите, комментарии загружаются...</p>\r\n            </ul>\r\n            <p>Чтобы добавить комментарий, <a href='#' id='toogleLink'>авторизуйтесь<a></p>\r\n        `;\r\n\r\n    appElement.innerHTML = appHtml;\r\n    askDataServ();\r\n    document.getElementById('toogleLink').addEventListener('click', () => {\r\n        renderForm();\r\n    })\r\n\r\n    const renderForm = () => {\r\n\r\n        appElement.innerHTML = `<div class=\"add-form\">\r\n            <h3>Форма ${isLoginMode ? 'входа' : 'регистрации'}</h3>\r\n            ${isLoginMode ? ' ' : `<input id=\"inputForRegName\" type=\"text\" class=\"add-form-regname\" placeholder=\"Введите имя\"/> <br>`}          \r\n            <input id=\"inputForRegLogin\" type=\"text\" class=\"add-form-regname\" placeholder=\"Введите логин\" />\r\n            <br>\r\n            <input id=\"inputForRegPassword\" type=\"password\" class=\"add-form-regname\" placeholder=\"Введите пароль\" />\r\n            \r\n                <button class=\"add-form-button\" id=\"buttonForReg\">${isLoginMode ? 'Войти' : 'Зарегистрироваться'}</button>\r\n                <br>\r\n                <a href=\"#\" class=\"text_Reglink\" id='toggleRegLink'>${isLoginMode ? 'Зарегистрироваться' : 'Войти'}</a>               \r\n            </div>`\r\n\r\n        document.getElementById('toggleRegLink').addEventListener('click', () => {\r\n            isLoginMode = !isLoginMode;\r\n            renderForm();\r\n        })\r\n\r\n\r\n        document.getElementById('buttonForReg').addEventListener('click', () => {\r\n            if (isLoginMode) {\r\n                (0,_push_js__WEBPACK_IMPORTED_MODULE_0__.authorizationUser)((newToken) => {\r\n                    token = newToken;\r\n                }, (newUser) => {currentUser = newUser});\r\n            } else {\r\n                (0,_push_js__WEBPACK_IMPORTED_MODULE_0__.registrationUser)((newToken) => {\r\n                    token = newToken;\r\n                }, (newUser) => { currentUser = newUser });\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://comments-feed/./js/loginComponents.js?");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _variables_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variables.js */ \"./js/variables.js\");\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render.js */ \"./js/render.js\");\n/* harmony import */ var _loginComponents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loginComponents.js */ \"./js/loginComponents.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api.js */ \"./js/api.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//***************************************************************************************************************\r\n//*********************************************************************************************************\r\n//---- Выполняемый код ----------------------\r\n//*********************************************************************************************************\r\n//***************************************************************************************************************\r\n(0,_loginComponents_js__WEBPACK_IMPORTED_MODULE_2__.getDataFromLocalStorage)(); //получаем токен и юзера из локал стораджа\r\nif (!_loginComponents_js__WEBPACK_IMPORTED_MODULE_2__.token) {\r\n    (0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)(_variables_js__WEBPACK_IMPORTED_MODULE_0__.arrOfComments);       //Если токена нет то вызываем функцию рендера, которая в свою очередь по нулевому токену вызовет рендер формы с предложением авторизоваться\r\n} else (0,_api_js__WEBPACK_IMPORTED_MODULE_3__.askDataServ)();               //Если токен есть, то запрашиваем данные на сервера, а затем вызовется рендер функция страницы с формой добавления коммента\r\n//renderApp(arrOfComments);\r\n\r\nconsole.log(\"It works!\");\n\n//# sourceURL=webpack://comments-feed/./js/main.js?");

/***/ }),

/***/ "./js/push.js":
/*!********************!*\
  !*** ./js/push.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorizationUser: () => (/* binding */ authorizationUser),\n/* harmony export */   initAnswerComment: () => (/* binding */ initAnswerComment),\n/* harmony export */   initUpdateLikesListeners: () => (/* binding */ initUpdateLikesListeners),\n/* harmony export */   registrationUser: () => (/* binding */ registrationUser),\n/* harmony export */   sendComment: () => (/* binding */ sendComment)\n/* harmony export */ });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render.js */ \"./js/render.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api.js */ \"./js/api.js\");\n/* harmony import */ var _changeElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./changeElement.js */ \"./js/changeElement.js\");\n\r\n//этот файл содержит подпрограммы, активируемые при нажатии каких либо элементов на странице\r\n\r\n;       //импорт рендер функции\r\n            //импорт функции отправки данных на сервер\r\n\r\n\r\n\r\n//Функция задержки для использования вместо промисов\r\nfunction delay(interval) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, interval);\r\n    });\r\n}\r\n\r\n//Функция для включения кнопки лайка на любом из комментов\r\n\r\nconst initUpdateLikesListeners = (array) => {\r\n    const likeButtonsElements = document.querySelectorAll(\".like-button\");\r\n\r\n    for (const likeButtonsElement of likeButtonsElements) {\r\n        likeButtonsElement.addEventListener(\"click\", (e) => {\r\n            e.stopPropagation();\r\n            const index = likeButtonsElement.dataset.index;\r\n            likeButtonsElement.classList.add('-loading-like');\r\n            delay(1000).then(() => {\r\n                if (array[index].isActiveLike) {\r\n                    array[index].likes--;\r\n                } else {\r\n                    array[index].likes++;\r\n                }\r\n                array[index].isActiveLike = !array[index].isActiveLike;\r\n                likeButtonsElement.classList.remove('-loading-like');\r\n                (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)(array);      //после того как нажали на лайк, рендерим страницу (число лайков изменилось)\r\n            })\r\n\r\n        });\r\n    }\r\n};\r\n\r\n//Функция для функционала ответ на комментарий\r\n\r\nconst initAnswerComment = () => {\r\n    const userCommentInput = document.getElementById('inputForComment');    //поле ввода коммента\r\n    const oldComments = document.querySelectorAll('.comment')\r\n    for (const oldComment of oldComments) {                         //при нажатии на коммент, пихаем его внутреннее содержимое в поле ввода комментария\r\n        oldComment.addEventListener('click', () => {\r\n            userCommentInput.value = `> ${oldComment.querySelector('.comment-text').innerHTML\r\n                .replaceAll(\"&amp;\", \"&\")\r\n                .replaceAll(\"&lt;\", \"<\")\r\n                .replaceAll(\"&gt;\", \">\")\r\n                .replaceAll(\"&quot;\", '\"')}`\r\n                + `\\n\\n${oldComment.querySelector('.comment-header').children[0].innerHTML\r\n                    .replaceAll(\"&amp;\", \"&\")\r\n                    .replaceAll(\"&lt;\", \"<\")\r\n                    .replaceAll(\"&gt;\", \">\")\r\n                    .replaceAll(\"&quot;\", '\"')},`\r\n        })\r\n    }\r\n}\r\n\r\n//Функция вызываемая по нажатии кнопки отправки коммента\r\n\r\nconst sendComment = () => {\r\n    const userNameInput = document.getElementById('inputForName');          //поле ввода имени\r\n    const userCommentInput = document.getElementById('inputForComment');    //поле ввода коммента\r\n    const messageCommentAdd = document.querySelector('.text-while-add-comment');  //сообщение что коммент отправляется\r\n    const formForComment = document.querySelector('.add-form');                   //форма ввода комментария\r\n\r\n    (0,_changeElement_js__WEBPACK_IMPORTED_MODULE_2__.letClearForm)(userNameInput);\r\n    (0,_changeElement_js__WEBPACK_IMPORTED_MODULE_2__.letClearForm)(userCommentInput);\r\n\r\n\r\n    //валидация что поля не пустые и содержат больше 3х символов\r\n    if (userNameInput.value === \"\") {\r\n        userNameInput.classList.add('error');\r\n        if (userCommentInput.value.replaceAll(\"\\n\", \"\") === \"\") {\r\n            userCommentInput.classList.add('error');\r\n        }\r\n        return;\r\n    }\r\n    if (userCommentInput.value.replaceAll(\"\\n\", \"\") === \"\") {\r\n        userCommentInput.classList.add('error');\r\n        return;\r\n    }\r\n\r\n    formForComment.classList.add('dpnone');           //если валидация пройдена то заменяем форму отправки комментария текстовой заглушкой\r\n    messageCommentAdd.classList.remove('dpnone');\r\n\r\n    //Отправляем обьект { \"text\": \"...\", \"name\": \"...\" } на сервер\r\n    (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.sendDataServ)();\r\n};\r\n\r\n\r\n\r\n//Функции, вызываемые при нажатии на кнопку входа/регистрации \r\n//---функция авторизации:\r\nconst authorizationUser = (setToken, setUser) => {\r\n    const login = document.getElementById('inputForRegLogin').value;\r\n    const password = document.getElementById('inputForRegPassword').value;\r\n    if (!login) {\r\n        alert('Введите логин');\r\n        return;\r\n    }\r\n    if (!password) {\r\n        alert('Введите пароль');\r\n        return;\r\n    }\r\n    document.getElementById('buttonForReg').innerHTML = 'Подождите...';\r\n    document.getElementById('buttonForReg').disabled = true;\r\n    (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.loginUser)(login, password)      \r\n        .then((user) => {\r\n            setToken(`Bearer ${user.user.token}`); \r\n            setUser(user.user.name);\r\n            localStorage.setItem('token', `Bearer ${user.user.token}`);     //сохраняем в локал сторадж токен и логин\r\n            localStorage.setItem('user', user.user.name);\r\n            (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.askDataServ)(); \r\n        })\r\n        .catch((error) => {\r\n            alert(error.message);\r\n        })\r\n}\r\n\r\n//---функция регистрации:\r\nconst registrationUser = (setToken, setUser) => {\r\n    const login = document.getElementById('inputForRegLogin').value;\r\n    const name = document.getElementById('inputForRegName').value;\r\n    const password = document.getElementById('inputForRegPassword').value;\r\n    if (!name) {\r\n        alert('Введите имя');\r\n        return;\r\n    }\r\n    if (!login) {\r\n        alert('Введите логин');\r\n        return;\r\n    }\r\n    if (!password) {\r\n        alert('Введите пароль');\r\n        return;\r\n    }\r\n    document.getElementById('buttonForReg').innerHTML = 'Подождите...';\r\n    document.getElementById('buttonForReg').disabled = true;\r\n    (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.regUser)(login, password, name)\r\n        .then((user) => {\r\n            setToken(`Bearer ${user.user.token}`); \r\n            setUser(user.user.name);\r\n            localStorage.setItem('token', `Bearer ${user.user.token}`); //сохраняем в локал сторадж токен и логин\r\n            localStorage.setItem('user', user.user.name);\r\n            (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.askDataServ)(); \r\n        })\r\n        .catch((error) => {\r\n            alert(error.message);\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://comments-feed/./js/push.js?");

/***/ }),

/***/ "./js/render.js":
/*!**********************!*\
  !*** ./js/render.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderApp: () => (/* binding */ renderApp),\n/* harmony export */   renderComments: () => (/* binding */ renderComments)\n/* harmony export */ });\n/* harmony import */ var _push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./push.js */ \"./js/push.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api.js */ \"./js/api.js\");\n/* harmony import */ var _loginComponents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loginComponents.js */ \"./js/loginComponents.js\");\n/* harmony import */ var _changeElement_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./changeElement.js */ \"./js/changeElement.js\");\n\r\n//этот файл содержит рендер функцию\r\n\r\n\r\n;        //импорт функций для ответа на коммент и лайка\r\n\r\n\r\n\r\n\r\n//Функция для форматирования даты под коммент\r\n\r\nconst formatDate = (dateObject) => {\r\n  let minutes = dateObject.getMinutes();\r\n  let months = dateObject.getMonth() + 1;\r\n  let years = dateObject.getFullYear() - 2000;\r\n  let days = dateObject.getDate();\r\n  if (days < 10) {\r\n    days = \"0\" + days;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = \"0\" + minutes;\r\n  }\r\n  if (months < 10) {\r\n    months = \"0\" + months;\r\n  }\r\n  const outDate = days + '.' + months + '.' + years + '  ' + dateObject.getHours() + ':' + minutes;\r\n  return outDate;\r\n}\r\n\r\n\r\n//рендер-функция преобразования из массива в html содержимое комментария\r\n\r\nconst renderComments = (array) => {\r\n  const elComments = document.getElementById('blockOfComments');   //страница с комментами\r\n  const commentsHTML = array.map((item, index) => {\r\n    let activeLike = '';\r\n    if (item.isActiveLike) {\r\n      activeLike = '-active-like'\r\n    }\r\n    return `<li class=\"comment\">\r\n        <div class=\"comment-header\">\r\n          <div>${item.name}</div>\r\n          <div>${formatDate(item.date)}</div>\r\n        </div>\r\n        <div class=\"comment-body\">\r\n          <div class=\"comment-text\">${item.text}</div>\r\n        </div>\r\n        <div class=\"comment-footer\">\r\n          <div class=\"likes\">\r\n            <span class=\"likes-counter\">${item.likes}</span>\r\n            <button class=\"like-button ${activeLike}\" data-id='${item.id}' data-index='${index}'></button>\r\n          </div>\r\n        </div>\r\n      </li>`\r\n  }).join('');\r\n\r\n  elComments.innerHTML = commentsHTML;\r\n}\r\n\r\nconst renderApp = (array) => {\r\n  const appElement = document.getElementById('app');\r\n  \r\n\r\n  if (!_loginComponents_js__WEBPACK_IMPORTED_MODULE_2__.token) {\r\n    (0,_loginComponents_js__WEBPACK_IMPORTED_MODULE_2__.renderLoginComponents)(appElement, _api_js__WEBPACK_IMPORTED_MODULE_1__.askDataServ);\r\n    return;\r\n  }\r\n\r\n  const commentsHTML = array.map((item, index) => {\r\n    let activeLike = '';\r\n    if (item.isActiveLike) {\r\n      activeLike = '-active-like'\r\n    }\r\n    return `<li class=\"comment\">\r\n        <div class=\"comment-header\">\r\n          <div>${item.name}</div>\r\n          <div>${formatDate(item.date)}</div>\r\n        </div>\r\n        <div class=\"comment-body\">\r\n          <div class=\"comment-text\">${item.text}</div>\r\n        </div>\r\n        <div class=\"comment-footer\">\r\n          <div class=\"likes\">\r\n            <span class=\"likes-counter\">${item.likes}</span>\r\n            <button class=\"like-button ${activeLike}\" data-id='${item.id}' data-index='${index}'></button>\r\n          </div>\r\n        </div>\r\n      </li>`\r\n  }).join('');\r\n\r\n\r\n  const appHtml = `\r\n            <ul class=\"comments\" id = \"blockOfComments\">\r\n          ${commentsHTML}\r\n        </ul >\r\n        <div class=\"text-while-add-comment dpnone\">\r\n          Пожалуйста подождите, комментарий добавляется...\r\n        </div>\r\n        <div class=\"add-form\">\r\n          <input id=\"inputForName\" type=\"text\" class=\"add-form-name\" value = ${_loginComponents_js__WEBPACK_IMPORTED_MODULE_2__.currentUser} disabled/>\r\n          <textarea id=\"inputForComment\" type=\"textarea\" class=\"add-form-text\" placeholder=\"Введите ваш коментарий\"\r\n            rows=\"4\"></textarea>\r\n          <div class=\"add-form-row\">\r\n            <button class=\"add-form-button add-form-button_disable\" id=\"buttonForWriteComment\" disabled>Написать</button>\r\n            <button class=\"add-form-button\" id=\"buttonForExit\">Выйти</button>\r\n          </div>\r\n        </div>`;\r\n\r\n  appElement.innerHTML = appHtml;\r\n  \r\n  const userNameInput = document.getElementById('inputForName');          //поле ввода имени\r\n  const userCommentInput = document.getElementById('inputForComment');    //поле ввода коммента\r\n  const commentButton = document.getElementById('buttonForWriteComment');   //кнопка для отправки коммента\r\n\r\n  //инициализируем подписку на события клика и ввода в поля имени и комментария\r\n\r\n  userNameInput.addEventListener('input', () => {\r\n    (0,_changeElement_js__WEBPACK_IMPORTED_MODULE_3__.letDisabledButton)(userNameInput.value)\r\n  });\r\n  userCommentInput.addEventListener('input', () => {\r\n    (0,_changeElement_js__WEBPACK_IMPORTED_MODULE_3__.letDisabledButton)(userCommentInput.value);\r\n  });\r\n  userNameInput.addEventListener('click', () => {\r\n    (0,_changeElement_js__WEBPACK_IMPORTED_MODULE_3__.letClearForm)(userNameInput);\r\n  });\r\n  userCommentInput.addEventListener('click', () => {\r\n    (0,_changeElement_js__WEBPACK_IMPORTED_MODULE_3__.letClearForm)(userCommentInput);\r\n  });\r\n\r\n\r\n  //инициализируем подписку на событие по клику по кнопке отправки коммента:\r\n  commentButton.addEventListener('click', _push_js__WEBPACK_IMPORTED_MODULE_0__.sendComment);\r\n\r\n  //обработчик по клавише enter:\r\n  document.addEventListener('keyup', (e) => {\r\n    if (e.code === 'Enter') {\r\n      (0,_push_js__WEBPACK_IMPORTED_MODULE_0__.sendComment)();\r\n    }\r\n  })\r\n\r\n  document.getElementById('buttonForExit').addEventListener('click', () => {\r\n    localStorage.clear();       //очищаем локал сторадж\r\n    (0,_loginComponents_js__WEBPACK_IMPORTED_MODULE_2__.getDataFromLocalStorage)();  //переназначаем токен и юзера (нулевые)\r\n    renderApp(array);           //рендерим страницу с предложением авторизоваться\r\n  })\r\n  \r\n  ;(0,_push_js__WEBPACK_IMPORTED_MODULE_0__.initUpdateLikesListeners)(array);\r\n  (0,_push_js__WEBPACK_IMPORTED_MODULE_0__.initAnswerComment)();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://comments-feed/./js/render.js?");

/***/ }),

/***/ "./js/variables.js":
/*!*************************!*\
  !*** ./js/variables.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrOfComments: () => (/* binding */ arrOfComments),\n/* harmony export */   currentUser: () => (/* binding */ currentUser)\n/* harmony export */ });\n\r\n//этот файл содержит переменные\r\nlet arrOfComments = []; //Массив комментов\r\n\r\nlet currentUser = null;\n\n//# sourceURL=webpack://comments-feed/./js/variables.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/main.js");
/******/ 	
/******/ })()
;